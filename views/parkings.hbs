<body id="home" class="scrollspy">


<nav class="red darken-3">
    <div class="nav-wrapper z-depth-5">
        <a href="#!" class="brand-logo center">SBB CFF FFS parkings

        </a>

        <ul class="right hide-on-med-and-down">
            <li>
                <a href="https://www.sbb.ch/" class="white-text">Search</a>
            </li>
            <li>
                <a href="https://www.sbb.ch/de/abos-billette/kaufmoeglichkeiten/abos-und-billette-kaufen.html"
                   class="white-text">To
                    buy</a>
            </li>
            <li>
                <a href="https://www.sbb.ch/de/abos-billette/kaufmoeglichkeiten/abos-und-billette-kaufen.html"
                   class="white-text">Login</a>
            </li>
        </ul>

    </div>
</nav>

<div class="container center-align">

    <br>

    <p class="flow-text">
    <h4><b>{{dataTrain.connections.0.from.station.name}} <i
            class="fas fa-arrow-right"></i> {{dataTrain.connections.0.to.station.name}}</b></h4>

   <p class="flow-text"> {{dateFormat dataTrain.connections.0.from.departure 'DD MMMM YYYY'}}</p>


<br>
 <div class="row">
       <div class="col s4 push-s2 "><div class="card-panel red darken-3 white-text">DEPARTURE</div></div>
       <div class="col s4 push-s2"><div class="card-panel light-green darken-3 white-text">ARRIVAL</div></div>
    

    <table class="table table-user-information">
        <tbody>
        {{#each dataTrain.connections}}
            <tr>
                <td class="col s3 push-s3"><i class="far fa-clock"></i>  {{dateFormat this.from.departure 'HH:mm'}} Pl:{{this.from.platform}}
                </td>
                <td class="col s3 push-s4"><i class="far fa-clock"></i>{{dateFormat this.to.arrival 'HH:mm'}} Pl:{{this.from.platform}}</td>
            </tr>
        {{/each}}

        </tbody>
    </table>
 </div>



    <br>

    <h4>Where do you want to park:</h4>
  <div class="row center-align">
    <ul class="collapsible col s6 push-s3" data-collapsible="accordion">
        {{#each dataParking}}
        <li>
            <div class="collapsible-header">
                <i class="material-icons">directions_car</i>{{this}}
            </div>
            <div class="collapsible-body">
                <span>
                    AVAILABLE PARKING SPOTS:<h4 id="spots{{this}}"></h4>
                    COST(â‚¬/hr):<h4 id="cost{{this}}"></h4><br>

                     <script>
                    document.getElementById("spots{{this}}").innerHTML =
                    Math.floor(Math.random() * 100);
                    </script>

                    <script>
                    document.getElementById("cost{{this}}").innerHTML =
                    Math.floor((Math.random() * 3) + 1);
                    </script>


                     
    <p class="range-field">
      <input type="range" id="duration"+"{{this}}" min="1" max="10" />
    </p>
    <button onclick='calc("{{this}}")'>SUBMIT</button>
  
                </span>
            </div>
        </li>
        {{/each}}
    </ul>
 </div>

 <script>

function calc(parking)
{
    console.log("cost"+parking);
    var cost = document.getElementById("cost"+parking);
    var duration = document.getElementById("duration"+parking).value;
    console.log(cost.value);
}
     
 </script>
<p class="flow-text">TOTAL COST:<h2 id="tc"></h2></p>
    </p>


</div>
<!-- FIXED ACTION BUTTON -->
<div class="fixed-action-btn ">
    <a href="/search" class="btn-floating red btn-large left-align"><i
            class="large material-icons">arrow_back</i></a>
</div>


<!--JavaScript at end of body for optimized loading-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/js/materialize.min.js"></script>

<script>

    document.addEventListener('DOMContentLoaded', function () {
        var elems = document.querySelectorAll('.collapsible');
        var instances = M.Collapsible.init(elems);
    });

    // Or with jQuery

    $(document).ready(function () {
        $('.collapsible').collapsible();
    });
 

    // Sidenav
    const sideNav = document.querySelector('.sidenav');
    M.Sidenav.init(sideNav, {});
    // Slider
    const slider = document.querySelector('.slider');
    M.Slider.init(slider, {
        indicators: false,
        height: 500,
        transition: 500,
        interval: 6000
    });
    // Autocomplete
    const ac = document.querySelector('.autocomplete');
    M.Autocomplete.init(ac, {
        data: {
            "Zurich": null,
            "Lausanne": null,
            "Bern": null,
            "Basel": null,
            "Geneva": null,
            "Lucerne": null,
        }
    });



    // Material Boxed
    const mb = document.querySelectorAll('.materialboxed');
    M.Materialbox.init(mb, {});
    // ScrollSpy
    const ss = document.querySelectorAll('.scrollspy');
    M.ScrollSpy.init(ss, {});
</script>


</body>